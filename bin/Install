#!/bin/bash
#
# Short:    Install Project (command-line)
# Author:   Mark J Swift
# Version:  3.2.24
# Modified: 04-Apr-2022
#
#
# Called as follows:    
#   sudo Install [<root_dirpath>]
#
# Requires
#  GLB_IC_MSGLEVELERR
#  GLB_IC_MSGLEVELNOTICE
#  GLB_IC_MSGLEVELWARN
#  GLB_NF_LOGMESSAGE
#  GLB_SC_PROJECTNAME
#  GLB_SC_PROJECTSIGNATURE
#  GLB_SV_PROJECTDIRPATH
#  GLB_SV_PROJECTINSTALLTYPE
#  GLB_SV_RUNUSERNAME
#  GLB_SV_THISSCRIPTNAME
#  GLB_SV_THISSCRIPTTEMPDIRPATH


# ---
  
# Assume that all code is run from a subdirectory of the main project directory
GLB_SV_PROJECTDIRPATH="$(dirname $(dirname ${0}))"

# ---

GLB_SV_CODEVERSION="3.2.24"

# ---

# Include the Base Defs library (if it is not already loaded)
if [ -z "${GLB_BC_BASEDEFS_INCLUDED}" ]
then
  . "${GLB_SV_PROJECTDIRPATH}"/inc-sh/BaseDefs.sh

  # Exit if something went wrong unexpectedly
  if [ -z "${GLB_BC_BASEDEFS_INCLUDED}" ]
  then
    echo >&2 "Something unexpected happened"
    exit 90
  fi
fi

# By the time we get here, quite a few global variables have been set up.

# ---

# Exit if not the root user
if [ "${GLB_SV_RUNUSERNAME}" != "root" ]
then
  GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELERR} "Unable to run, try: sudo ${GLB_SV_THISSCRIPTNAME}"
  exit 91
fi

# ---

# Where we should install
sv_RootDirPath="${1}"

if [ "${sv_RootDirPath}" = "/" ]
then
  sv_RootDirPath=""
fi

# ---

if [ "${GLB_SV_PROJECTDIRPATH}" = "${sv_RootDirPath}"/usr/local/${GLB_SC_PROJECTNAME} ]
then
  GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELERR} "Cannot install from this folder; copy the folder somewhere else and try again."
  exit 92
fi

# ---

if test -z "${sv_RootDirPath}"
then
  "${GLB_SV_PROJECTDIRPATH}"/bin/PreInstall
  iv_Error="$?"
  if [ "${iv_Error}" != "0" ]
  then
    GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELWARN} "Cancelling install of ${GLB_SC_PROJECTNAME}."
    exit ${iv_Error}
  fi

  GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELNOTICE} "Installing ${GLB_SC_PROJECTNAME}."
fi

# ---

if [ "${GLB_SV_PROJECTINSTALLTYPE}" = "minimum" ]
then
  GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELNOTICE} "This is a minimum install."

  mkdir -p "${GLB_SV_THISSCRIPTTEMPDIRPATH}/${GLB_SC_PROJECTNAME}/bin"
  cp -pR "${GLB_SV_PROJECTDIRPATH}/bin/" "${GLB_SV_THISSCRIPTTEMPDIRPATH}/${GLB_SC_PROJECTNAME}/bin/"
  rm -f "${GLB_SV_THISSCRIPTTEMPDIRPATH}/${GLB_SC_PROJECTNAME}/bin/PreInstall"
  rm -f "${GLB_SV_THISSCRIPTTEMPDIRPATH}/${GLB_SC_PROJECTNAME}/bin/Install"
  rm -f "${GLB_SV_THISSCRIPTTEMPDIRPATH}/${GLB_SC_PROJECTNAME}/bin/PostInstall"
  rm -f "${GLB_SV_THISSCRIPTTEMPDIRPATH}/${GLB_SC_PROJECTNAME}/bin/Uninstall"
  mkdir -p "${GLB_SV_THISSCRIPTTEMPDIRPATH}/${GLB_SC_PROJECTNAME}/images"
  cp -pR "${GLB_SV_PROJECTDIRPATH}/images/" "${GLB_SV_THISSCRIPTTEMPDIRPATH}/${GLB_SC_PROJECTNAME}/images/"
  mkdir -p "${GLB_SV_THISSCRIPTTEMPDIRPATH}/${GLB_SC_PROJECTNAME}/readme"
  cp -pR "${GLB_SV_PROJECTDIRPATH}/readme/" "${GLB_SV_THISSCRIPTTEMPDIRPATH}/${GLB_SC_PROJECTNAME}/readme/"
  cp -p "${GLB_SV_PROJECTDIRPATH}/LICENSE" "${GLB_SV_THISSCRIPTTEMPDIRPATH}/${GLB_SC_PROJECTNAME}/LICENSE"
  cp -p "${GLB_SV_PROJECTDIRPATH}/README.md" "${GLB_SV_THISSCRIPTTEMPDIRPATH}/${GLB_SC_PROJECTNAME}/README.md"

else
  GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELNOTICE} "This is a full install."

  # -- Copy the main payload
  mkdir -p "${GLB_SV_THISSCRIPTTEMPDIRPATH}/${GLB_SC_PROJECTNAME}"
  cp -pR "${GLB_SV_PROJECTDIRPATH}/" "${GLB_SV_THISSCRIPTTEMPDIRPATH}/${GLB_SC_PROJECTNAME}/"

  # -- Remove any unwanted files
  find "${GLB_SV_THISSCRIPTTEMPDIRPATH}/${GLB_SC_PROJECTNAME}" -iname .DS_Store -exec rm -f {} \;
  rm -fR "${GLB_SV_THISSCRIPTTEMPDIRPATH}/${GLB_SC_PROJECTNAME}/.git"
  rm -fR "${GLB_SV_THISSCRIPTTEMPDIRPATH}/${GLB_SC_PROJECTNAME}/SupportFiles"
  find -d "${GLB_SV_THISSCRIPTTEMPDIRPATH}/${GLB_SC_PROJECTNAME}" -iregex ".*/[^/]*custom[^/]*/.*" -exec rm -fd {} \;

  # -- Copy the custom example files only 
  if [ -e "${GLB_SV_PROJECTDIRPATH}"/Policies-custom ]
  then
    mkdir -p "${GLB_SV_THISSCRIPTTEMPDIRPATH}/${GLB_SC_PROJECTNAME}/Policies-custom/"
    find -d "${GLB_SV_PROJECTDIRPATH}"/Policies-custom -iname "*Example*" -exec cp "{}" ${GLB_SV_THISSCRIPTTEMPDIRPATH}/${GLB_SC_PROJECTNAME}/Policies-custom/ \;
  fi

fi

# -- Copy into place
cp -pR "${GLB_SV_THISSCRIPTTEMPDIRPATH}/${GLB_SC_PROJECTNAME}/" "${sv_RootDirPath}"/usr/local/${GLB_SC_PROJECTNAME}/
chown -R root:wheel "${sv_RootDirPath}"/usr/local/${GLB_SC_PROJECTNAME}
chmod -R 755 "${sv_RootDirPath}"/usr/local/${GLB_SC_PROJECTNAME}

if test -n "${sv_RootDirPath}"
then
  mkdir -p "${sv_RootDirPath}"/Library/LaunchAgents
  mkdir -p "${sv_RootDirPath}"/Library/LaunchDaemons
  chown root:wheel "${sv_RootDirPath}"/Library
  chmod 755 "${sv_RootDirPath}"/Library
  chown root:wheel "${sv_RootDirPath}"/Library/LaunchAgents
  chmod 755 "${sv_RootDirPath}"/Library/LaunchAgents
  chown root:wheel "${sv_RootDirPath}"/Library/LaunchDaemons
  chmod 755 "${sv_RootDirPath}"/Library/LaunchDaemons
fi

if [ "${GLB_SV_PROJECTDIRPATH}" = "/usr/local/${GLB_SC_PROJECTNAME}" ]
then
  sv_LaunchServiceSrcDirPath="/Library"
  
else
  sv_LaunchServiceSrcDirPath="${GLB_SV_PROJECTDIRPATH}"/SupportFiles

fi

# Copy LaunchAgents in-place
find -d "${sv_LaunchServiceSrcDirPath}/LaunchAgents" -iname "${GLB_SC_PROJECTSIGNATURE}*" -exec cp "{}" "${sv_RootDirPath}"/Library/LaunchAgents/ \;

# Copy LaunchDaemons in-place
find -d "${sv_LaunchServiceSrcDirPath}/LaunchDaemons" -iname "${GLB_SC_PROJECTSIGNATURE}*" -exec cp "{}" "${sv_RootDirPath}"/Library/LaunchDaemons/ \;

# Set the LaunchAgents privileges
while read sv_LaunchServiceFileName
do
  chown root:wheel "${sv_LaunchServiceFileName}"
  chmod 644 "${sv_LaunchServiceFileName}"
done < <(find -d "${sv_RootDirPath}/Library/LaunchAgents" -iname "${GLB_SC_PROJECTSIGNATURE}*")

# Set the LaunchDaemons privileges
while read sv_LaunchServiceFileName
do
  chown root:wheel "${sv_LaunchServiceFileName}"
  chmod 644 "${sv_LaunchServiceFileName}"
done < <(find -d "${sv_RootDirPath}/Library/LaunchDaemons" -iname "${GLB_SC_PROJECTSIGNATURE}*")

# Execute PostInstall check
if test -z "${sv_RootDirPath}"
then
  "${GLB_SV_PROJECTDIRPATH}"/bin/PostInstall
  iv_Error="$?"
  if [ "${iv_Error}" != "0" ]
  then
    GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELWARN} "Cancelling install of ${GLB_SC_PROJECTNAME}."
    "${GLB_SV_PROJECTDIRPATH}"/bin/Uninstall "${sv_RootDirPath}"
    exit ${iv_Error}
  fi
fi

# Remove temporary files
cd "${GLB_SV_PROJECTDIRPATH}"
rm -fR "${GLB_SV_THISSCRIPTTEMPDIRPATH}"

exit 0
